{
  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
  "contentVersion": "1.0.0.0",
  "actions": {
    "Initialize_pipelineStatus_variable": {
      "type": "InitializeVariable",
      "inputs": {
        "variables": [
          {
            "name": "pipelineStatus",
            "type": "String",
            "value": "Queued"
          }
        ]
      },
      "runAfter": {
        "Move_file_from_private_ADLS_to_Airlock_File_Share": ["Succeeded"]
      }
    },
    "Move_file_from_private_ADLS_to_Airlock_File_Share": {
      "type": "ApiConnection",
      "inputs": {
        "host": {
          "connection": {
            "name": "@parameters('$connections')['azuredatafactory']['connectionId']"
          }
        },
        "method": "post",
        "body": {
          "fileName": "@triggerBody()?['Name']",
          "sinkConnStringKvBaseUrl": "@parameters('airlockConnStringKvBaseUrl')",
          "sinkFileShareName": "@parameters('airlockFileShareName')",
          "sinkFolderPath": "@parameters('airlockFolderPath')",
          "sinkStorageAccountName": "@parameters('airlockStorageAccountName')",
          "sourceFolderPath": "@parameters('privateFolderPath')",
          "sourceStorageAccountName": "@parameters('privateStorageAccountName')"
        },
        "path": "/subscriptions/@{parameters('subscriptionId')}/resourcegroups/@{parameters('dataFactoryRG')}/providers/Microsoft.DataFactory/factories/@{parameters('dataFactoryName')}/pipelines/@{encodeURIComponent('pipe-data_move-adls_to_files')}/CreateRun",
        "queries": {
          "x-ms-api-version": "2017-09-01-preview"
        }
      },
      "runAfter": {}
    },
    "Pipeline_successful": {
      "type": "If",
      "expression": {
        "and": [
          {
            "equals": ["@body('Get_a_pipeline_run')?['status']", "Succeeded"]
          }
        ]
      },
      "actions": {
        "Export_approved": {
          "type": "If",
          "expression": {
            "and": [
              {
                "equals": [
                  "@body('Send_approval_email')?['SelectedOption']",
                  "Approve"
                ]
              }
            ]
          },
          "actions": {
            "Move_file_from_Airlock_File_Share_to_public_ADLS": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuredatafactory']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "fileName": "@triggerBody()?['Name']",
                  "sinkFolderPath": "@parameters('exportApprovedContainerName')",
                  "sinkStorageAccountName": "@parameters('publicStorageAccountName')",
                  "sourceConnStringKvBaseUrl": "@parameters('airlockConnStringKvBaseUrl')",
                  "sourceFileShareName": "@parameters('airlockFileShareName')",
                  "sourceFolderPath": "@concat(parameters('airlockFolderPath'), '/', parameters('privateFolderPath'))",
                  "sourceStorageAccountName": "@parameters('airlockStorageAccountName')"
                },
                "path": "/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourcegroups/@{encodeURIComponent(parameters('dataFactoryRG'))}/providers/Microsoft.DataFactory/factories/@{encodeURIComponent(parameters('dataFactoryName'))}/pipelines/@{encodeURIComponent('pipe-data_move-files_to_adls')}/CreateRun",
                "queries": {
                  "x-ms-api-version": "2017-09-01-preview"
                }
              }
            },
            "Send_approval_email_to_PI": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['office365']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "To": "@parameters('processNotificationEmail')",
                  "Subject": "Airlock Export Request Approved",
                  "Body": "<p class=\"editor-paragraph\">@{parameters('approverEmail')} approved the export request of file \"@{parameters('airlockFolderPath')}/@{triggerBody()?['Name']}\".</p><br><p class=\"editor-paragraph\">The file is being moved to the project's external storage account in the \"@{parameters('exportApprovedContainerName')}\" blob container. This usually takes 1-2 minutes.</p>",
                  "Importance": "Normal"
                },
                "path": "/v2/Mail"
              },
              "runAfter": {
                "Move_file_from_Airlock_File_Share_to_public_ADLS": [
                  "Succeeded"
                ]
              }
            }
          },
          "else": {
            "actions": {
              "Move_file_from_Airlock_File_Share_to_private_File_Share_rejected_folder": {
                "type": "ApiConnection",
                "inputs": {
                  "host": {
                    "connection": {
                      "name": "@parameters('$connections')['azuredatafactory']['connectionId']"
                    }
                  },
                  "method": "post",
                  "body": {
                    "fileName": "@triggerBody()?['Name']",
                    "sinkFolderPath": "@parameters('exportRejectedFolderName')",
                    "sinkFileShareName": "@parameters('privateFileShareName')",
                    "sinkStorageAccountName": "@parameters('privateStorageAccountName')",
                    "sourceConnStringKvBaseUrl": "@parameters('airlockConnStringKvBaseUrl')",
                    "sourceFileShareName": "@parameters('airlockFileShareName')",
                    "sourceFolderPath": "@concat(parameters('airlockFolderPath'), '/', parameters('privateFolderPath'))",
                    "sourceStorageAccountName": "@parameters('airlockStorageAccountName')",
                    "sinkConnStringKvBaseUrl": "@parameters('privateConnStringKvBaseUrl')"
                  },
                  "path": "/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourcegroups/@{encodeURIComponent(parameters('dataFactoryRG'))}/providers/Microsoft.DataFactory/factories/@{encodeURIComponent(parameters('dataFactoryName'))}/pipelines/@{encodeURIComponent('pipe-data_move-files_to_files')}/CreateRun",
                  "queries": {
                    "x-ms-api-version": "2017-09-01-preview"
                  }
                }
              },
              "Send_rejection_email_to_PI": {
                "type": "ApiConnection",
                "inputs": {
                  "host": {
                    "connection": {
                      "name": "@parameters('$connections')['office365']['connectionId']"
                    }
                  },
                  "method": "post",
                  "body": {
                    "To": "@parameters('processNotificationEmail')",
                    "Subject": "Airlock Export Request Rejected by Approver",
                    "Body": "<p class=\"editor-paragraph\">@{parameters('approverEmail')} rejected the export request of file \"@{parameters('airlockFolderPath')}/@{triggerBody()?['Name']}\".</p><br><p class=\"editor-paragraph\">The file is being moved back to the project's file share in the \"export-rejected\" folder. This usually takes 1-2 minutes.</p>",
                    "Importance": "Normal"
                  },
                  "path": "/v2/Mail"
                },
                "runAfter": {
                  "Move_file_from_Airlock_File_Share_to_private_File_Share_rejected_folder": [
                    "Succeeded"
                  ]
                }
              }
            }
          },
          "runAfter": {
            "Send_approval_email": ["Succeeded"]
          }
        },
        "Send_approval_email": {
          "type": "ApiConnectionWebhook",
          "inputs": {
            "host": {
              "connection": {
                "name": "@parameters('$connections')['office365']['connectionId']"
              }
            },
            "body": {
              "NotificationUrl": "@{listCallbackUrl()}",
              "Message": {
                "To": "@parameters('approverEmail')",
                "Body": "A new request for export has been received.\n\nFile: @{parameters('airlockFolderPath')}/@{triggerBody()?['Name']}",
                "Importance": "Normal",
                "HideHTMLMessage": false,
                "ShowHTMLConfirmationDialog": false,
                "Subject": "Data Export Request",
                "Options": "Approve, Reject"
              }
            },
            "path": "/approvalmail/$subscriptions"
          }
        }
      },
      "else": {
        "actions": {
          "Send_failure_email_to_approver_and_PI": {
            "type": "ApiConnection",
            "inputs": {
              "host": {
                "connection": {
                  "name": "@parameters('$connections')['office365']['connectionId']"
                }
              },
              "method": "post",
              "body": {
                "To": "@{parameters('approverEmail')},@{parameters('processNotificationEmail')}",
                "Subject": "Airlock Pipeline Failed",
                "Body": "<p class=\"editor-paragraph\">Pipeline run failed moving file \"@{parameters('airlockFolderPath')}/@{triggerBody()?['Name']}\" from the spoke's export-requested container to the airlock file share.</p><br><p class=\"editor-paragraph\">For troubleshooting purposes:<br>Data Factory pipeline run ID: @{body('Move_file_from_private_ADLS_to_Airlock_File_Share')?['runId']}</p><p class=\"editor-paragraph\">Data Factory pipeline status: @{variables('pipelineStatus')}</p>",
                "Importance": "Normal"
              },
              "path": "/v2/Mail"
            }
          }
        }
      },
      "runAfter": {
        "Until_pipeline_is_finished": ["Succeeded"]
      }
    },
    "Until_pipeline_is_finished": {
      "type": "Until",
      "expression": "@and(not(equals(variables('pipelineStatus'), 'Queued')),not(equals(variables('pipelineStatus'), 'InProgress')))",
      "limit": {
        "count": 20,
        "timeout": "PT1H"
      },
      "actions": {
        "Delay": {
          "type": "Wait",
          "inputs": {
            "interval": {
              "count": 1,
              "unit": "Minute"
            }
          }
        },
        "Get_a_pipeline_run": {
          "type": "ApiConnection",
          "inputs": {
            "host": {
              "connection": {
                "name": "@parameters('$connections')['azuredatafactory']['connectionId']"
              }
            },
            "method": "get",
            "path": "/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourcegroups/@{encodeURIComponent(parameters('dataFactoryRG'))}/providers/Microsoft.DataFactory/factories/@{encodeURIComponent(parameters('dataFactoryName'))}/pipelineRuns/@{encodeURIComponent(body('Move_file_from_private_ADLS_to_Airlock_File_Share')?['runId'])}",
            "queries": {
              "x-ms-api-version": "2017-09-01-preview"
            }
          },
          "runAfter": {
            "Delay": ["Succeeded"]
          }
        },
        "Set_variable": {
          "type": "SetVariable",
          "inputs": {
            "name": "pipelineStatus",
            "value": "@body('Get_a_pipeline_run')?['status']"
          },
          "runAfter": {
            "Get_a_pipeline_run": ["Succeeded"]
          }
        }
      },
      "runAfter": {
        "Initialize_pipelineStatus_variable": ["Succeeded"]
      }
    }
  },
  "outputs": {},
  "parameters": {
    "dataFactoryName": {
      "defaultValue": "",
      "type": "String"
    },
    "dataFactoryRG": {
      "defaultValue": "",
      "type": "String"
    },
    "exportApprovedContainerName": {
      "defaultValue": "",
      "type": "String"
    },
    "publicStorageAccountName": {
      "defaultValue": "",
      "type": "String"
    },
    "approverEmail": {
      "defaultValue": "",
      "type": "String"
    },
    "airlockFileShareName": {
      "defaultValue": "",
      "type": "String"
    },
    "airlockFolderPath": {
      "defaultValue": "",
      "type": "String"
    },
    "airlockStorageAccountName": {
      "defaultValue": "",
      "type": "String"
    },
    "privateFolderPath": {
      "defaultValue": "",
      "type": "String"
    },
    "privateStorageAccountName": {
      "defaultValue": "",
      "type": "String"
    },
    "subscriptionId": {
      "defaultValue": "",
      "type": "String"
    },
    "airlockConnStringKvBaseUrl": {
      "defaultValue": "",
      "type": "String"
    },
    "processNotificationEmail": {
      "defaultValue": "",
      "type": "String"
    },
    "privateFileShareName": {
      "defaultValue": "",
      "type": "String"
    },
    "privateConnStringKvBaseUrl": {
      "defaultValue": "",
      "type": "String"
    },
    "privateContainerName": {
      "defaultValue": "",
      "type": "String"
    },
    "pipelineNameBlobToFileShare": {
      "defaultValue": "",
      "type": "String"
    },
    "pipelineNameFileShareToBlob": {
      "defaultValue": "",
      "type": "String"
    },
    "$connections": {
      "type": "Object",
      "defaultValue": {}
    },
    "exportRejectedFolderName": {
      "type": "String",
      "defaultValue": "export-rejected"
    }
  },
  "triggers": {
    "When_a_blob_is_added_or_modified_(properties_only)_(V2)": {
      "type": "ApiConnection",
      "inputs": {
        "host": {
          "connection": {
            "name": "@parameters('$connections')['azureblob']['connectionId']"
          }
        },
        "method": "get",
        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('privateStorageAccountName')))}/triggers/batch/onupdatedfile",
        "queries": {
          "folderId": "@concat('/', parameters('privateContainerName'))",
          "maxFileCount": 1,
          "checkBothCreatedAndModifiedDateTime": false
        }
      },
      "recurrence": {
        "frequency": "Minute",
        "interval": 1
      },
      "splitOn": "@triggerBody()"
    }
  }
}
